Sort an array A using Merge Sort.
Change in the input array itself. So no need to return or print anything.
Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
2 1 5 2 3
Sample Output 2 :
1 2 2 3 5 


==================================================================

void merge(int arr[], int l, int m, int r)
{

    int i = l, j = m + 1, k = l;
    int sortedArray[r+1] ;

    while (i <= m && j <= r)
    {
        if (arr[i] < arr[j])
        {
            sortedArray[k++] = arr[i++];
        }
        else
        {
            sortedArray[k++] = arr[j++];
        }
    }

    for (; i <= m; i++)
    {
        sortedArray[k++] = arr[i];
    }

    for (; j <= r; j++)
    {
        sortedArray[k++] = arr[j];
    }

    for (int i = l; i <= r; i++)
    { 
        arr[i] = sortedArray[i];
    }
   
}
void mergeSort(int arr[], int st, int end)
{
    if (st < end)
    {
        int mid = (st + end) / 2;
        mergeSort(arr, st, mid);
        mergeSort(arr, mid + 1, end);
        merge(arr, st, mid, end);
    }
}


void mergeSort(int input[], int size){
	// Write your code here
         mergeSort(input, 0, size - 1);
}
